spring.datasource.platform=postgres
spring.datasource.url=jdbc:postgresql://${endereco.host.db}proposta
spring.datasource.username=keycloak
spring.datasource.password=password
spring.jpa.hibernate.ddl-auto=update

endereco.host.db=${HOST_DB:localhost:5432/}
endereco.api.analise.financeira=${ANALISE_URL:http://localhost:9999/}
endereco.api.cartao=${CARTAO_URL:http://localhost:8888/}
associa.api.cartao.schedule=${ASSOCIA_CARTAO_SCHEDULE:1000}

spring.jpa.properties.javax.persistence.query.timeout=50

feign.client.config.analise.read-timeout=100
feign.client.config.analise.connect-timeout=100
feign.client.config.cartao.read-timeout=100
feign.client.config.cartao.connect-timeout=100

## spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/nosso-cartao}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/nosso-cartao/protocol/openid-connect/certs}

spring.application.name=bootcamp-app-proposta

management.endpoints.web.exposure.include=info,health,prometheus

# Jaeger - Habilita ou não
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}

# Jaeger - Nome do serviço
opentracing.jaeger.service-name=${spring.application.name}

# Jaeger - Endereço para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}

# Jaeger - Tipo de amostragem (probabilístico) e sua configuração (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}