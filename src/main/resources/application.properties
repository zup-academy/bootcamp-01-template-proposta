# PostgreSQL
spring.datasource.platform=postgres
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/proposta}
spring.datasource.username=keycloak
spring.datasource.password=password
spring.jpa.hibernate.ddl-auto=create-drop

# Endpoints expostos
management.endpoints.web.exposure.include=health,metrics,prometheus

# Variáveis de ambiente
feign.integracao.url.analise-proposta=${URL_ANALISE_PROPOSTA:http://localhost:9999}
feign.integracao.url.integracao-cartao=${URL_INTEGRACAO_CARTAO:http://localhost:8888}
periodicidade.executa-operacao=${PERIODICIDADE_TAREFA:5000}

# spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/nosso-cartao}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/nosso-cartao/protocol/openid-connect/certs}

# Métricas
management.metrics.tags.aplicacao=${NOME_DA_APLICACAO:proposta}
management.metrics.tags.ambiente=${AMBIENTE:desenvolvimento}

# Jaeger - Habilita ou não
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}

# Jaeger - Nome do serviço
opentracing.jaeger.service-name=${NOME_DA_APLICACAO:proposta}

# Jaeger - Endereço para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}

# Jaeger - Tipo de amostragem (probabilístico) e sua configuração (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}