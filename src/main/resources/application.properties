api.solicitacao.analise = http://localhost:9999/api
api.cartoes = http://localhost:8888/api

# H2
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# Datasource
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driver-class-name=org.h2.Driver
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

#LOG
msg.log.biometria.cartao = Id Cartão encontrado?

#Feign cliente 
#tempo maximo de espera para execucao 
#tempo maximo de conexao com outro sistema
feign.client.config.nomeFeignClienteDefinidoNoBean.connect-timeout=100
feign.client.config.nomeFeignClienteDefinidoNoBean.read-timeout=100

#hibernete
spring.jpa.properties.javax.persistence.query.timeout = 50

#keycloak

keycloak.realm = nosso-cartao
keycloak.auth-server-url = http://localhost:18080/auth
keycloak.ssl-required = external
keycloak.resource = nosso-cartao
keycloak.credentials.secret = e0f97393-a9b7-4a56-9fe8-c56a31fcf01e 
keycloak.use-resource-role-mappings = true 
keycloak.bearer-only = true

#prometheus
management.endpoints.web.exposure.include=info,health,prometheus
management.endpoints.prometheus.enabled=true
management.metrics.tags.aplicacao=${NOME_DA_APLICACAO:servico de proposta}
management.metrics.tags.ambiente=${AMBIENTE:desenvolvimento}

#Jaeger
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}
# Jaeger - Nome do serviço
opentracing.jaeger.service-name=${spring.application.name:	nosso-cartao}
# Jaeger - Endereço para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}
# Jaeger - Tipo de amostragem (probabilístico) e sua configuração (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}
#ErroOpenTracing para JDBC 
opentracing.spring.cloud.jdbc.enabled=false

#criptografia

seguranca.criptografia.chave = 5c0744940b5c369b