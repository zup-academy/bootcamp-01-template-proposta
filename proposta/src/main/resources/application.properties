spring.application.name=nosso-cartao-proposta

## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://localhost:3306/cartaocredito?useSSL=false&useTimezone=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=@MAno261295

# Dialeto SQL melhorar o SQL gerado pelo Hibernate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.data.jpa.repositories.bootstrap-mode=default


enderecos-externos.base-url = http://localhost:9999

spring.jpa.properties.javax.persistence.query.timeout = 50

#aqui vai ser ajustado com o tempo
# tempo para chegar do outro lado
feign.client.config.pagador-fake.connect-timeout=100
# tempo máximo para esperar voltar
feign.client.config.pagador-fake.read-timeout=100

logging.level.br.com.zup.proposta=debug


#health
management.endpoints.web.exposure.include=info,health,prometheus,metrics
management.endpoint.health.show-details=always
management.endpoint.health.status.http-mapping.down=501
#metrics
management.metrics.tags.aplicacao=${NOME_DA_APLICACAO:servico de proposta}
management.metrics.tags.ambiente=${AMBIENTE:desenvolvimento}


info.app.name=@project.name@
info.app.description=@project.description@
info.app.version=@project.version@
info.app.encoding=@project.build.sourceEncoding@
info.app.java.version=@java.version@

#scheduler
periodicidade.executa-associacao-cartao = 100000


# Jaeger - Habilita ou não
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}
# Jaeger - Nome do serviço
opentracing.jaeger.service-name=${spring.application.name}
# Jaeger - Endereço para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}
# Jaeger - Tipo de amostragem (probabilístico) e sua configuração (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}

## spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/Proposta}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/Proposta/protocol/openid-connect/certs}